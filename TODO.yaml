tasks:
  - update README
  - client_threads_synchronization:
      - extract/group RemoteGameProxy's game state into a single entity
      - use built-in 'synchronization' mechanism to avoid race-conditions between Reader and JavaFX threads
  - loading_FXML_files:
      - failure to load FXML file is not recoverable
      - therefore, the app needs to be terminated and IOException shouldn't be declared/handled explicitly
      - controller_initialization:
          - either inject controller into loader (more elegant and readable code)
          - or annotate FXML files with 'fx:controller' attribute and inject dependencies into generated controller (better IntelIj support)
  - more_flexible_GUI:
      - allow resizing windows
      - bind aspect ratios of elements (for example boards needs to be 1:1 square)
      - bind size of dynamically added elements (like board cells) to their containers/parents
      - specify as little fixed sizes as possible
  - resolve_TODOs:
      - game_outcome_messages:
          - what should game/server return to client?
          - what should client display to user?
      - reuse client connections
      - disable/enable interactions with board screen or its parts while sub-windows are active (promotions, draw etc.)
      - correct/finish escalating and/or handling exceptions, including closing sockets, interrupting threads etc.
  - code_style:
      - regroup classes
      - simplify class structure, if possible (things like ImageProvider interface?)
      - rename packages/modules
      - keep functions as private as possible
      - rename classes and functions
      - use uniform style rules (use linter)
